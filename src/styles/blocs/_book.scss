@import "../config/medias";

.book {
  /* The books will be contained inside a square of this dimension */
  --base-size: 288;
  --base-size-rem: calc(var(--base-size) * 0.0625rem);

  @include medium {
    --base-size: 350;
  }

  /* Ratio between width and height. <1 for portrait books, >1 for landscape */
  --ratio-width-height: calc(var(--width) / var(--height));

  /* Is the book a portrait format ? */
  --is-portrait: clamp(0, calc((var(--height) - var(--width)) * 999), 1);

  /* Ratio between the biggest size displayed and the physical book */
  --ratio-displayed-physical: calc(
    max(var(--height), var(--width)) / var(--base-size)
  );

  /* Thickness is based on the pages and the displayed/physical ratio */
  --thickness-rem: calc(
    var(--pages) * var(--thickness-factor) * var(--ratio-displayed-physical)
  );
  --thickness-factor: 0.1rem;

  @include medium {
    --thickness-factor: 0.17rem;
  }

  /* Very big books need to be de-zoomed a bit to not visually overflow */
  --big-books-dezoom: calc(var(--thickness-rem) * -0.2);

  /* No page offset by default */
  --offset: 0rem;

  aspect-ratio: var(--width) / var(--height);
  max-width: min(
    calc(var(--base-size-rem) * var(--ratio-width-height)),
    var(--base-size-rem)
  );
  display: flex;
  align-items: center;
  justify-content: center;
  perspective: 45rem;
}

.book--offset {
  --offset: 0.1875rem;
}

.book__inner {
  width: 100%;
  aspect-ratio: var(--width) / var(--height);
  position: relative;
  transform-style: preserve-3d;
  transform: translateZ(var(--big-books-dezoom));
  transition: 1s ease;
  will-change: transform;

  .item:hover & {
    transform: translateZ(var(--big-books-dezoom)) rotateY(-25deg);
  }

  @include below-medium {
    [open] ~ .book & {
      transform: translateZ(var(--big-books-dezoom)) rotateY(-25deg);
    }
  }

  // Pages
  &::before {
    position: absolute;
    content: " ";
    top: var(--offset);
    right: 0;
    width: calc(var(--thickness-rem) - 0.125rem);
    height: calc(100% - (2 * var(--offset)));
    transform: translateX(
        calc((var(--thickness-rem) / 2) - 0.125rem - var(--offset))
      )
      rotateY(90deg);
    background: linear-gradient(
      90deg,
      #fff 0%,
      #f9f9f9 5%,
      #fff 10%,
      #f9f9f9 15%,
      #fff 20%,
      #f9f9f9 25%,
      #fff 30%,
      #f9f9f9 35%,
      #fff 40%,
      #f9f9f9 45%,
      #fff 50%,
      #f9f9f9 55%,
      #fff 60%,
      #f9f9f9 65%,
      #fff 70%,
      #f9f9f9 75%,
      #fff 80%,
      #f9f9f9 85%,
      #fff 90%,
      #f9f9f9 95%,
      #fff 100%
    );
  }

  // Backcover
  &::after {
    position: absolute;
    top: 0;
    left: 0;
    content: " ";
    width: 100%;
    aspect-ratio: var(--width) / var(--height);
    transform: translateZ(calc(var(--thickness-rem) / -2));
    background-color: var(--cover-color, white);
    border-radius: 0 0.125rem 0.125rem 0;
    box-shadow: -0.625rem 0 1rem 0.625rem rgba(0, 0, 0, 0.2);

    .book--offset & {
      background-color: var(--cover-color);
    }
  }
}

.book__cover {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  height: 100%;
  width: 100%;
  transform: translateZ(calc(var(--thickness-rem) / 2));
  background-color: #01060f;
  border-radius: 0 0.125rem 0.125rem 0;
  box-shadow: 0.3125rem 0.3125rem 1rem rgba(0, 0, 0, 0.2);

  img {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
}
